{"version":3,"sources":["components/Main.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["marked","setOptions","breaks","renderer","Renderer","link","href","title","text","code","image","Main","props","editor","preview","flex","padding","opacity","width","cleanHTML","__html","markdown","className","style","id","onChange","value","dangerouslySetInnerHTML","Nav","faCompressArrowsAlt","faExpandArrowsAlt","editorClick","previewClick","onClick","icon","App","state","editorMaximized","previewMaximized","handleChange","bind","handleEditorMaximized","handlePreviewMaximized","e","this","setState","target","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec03eb6e.chunk.js","sourcesContent":["import \"../styles/Main.css\";\r\nimport marked from \"marked\";\r\n// import DOMPurify from \"dompurify\";\r\n\r\nmarked.setOptions({\r\n    breaks: true,\r\n});\r\n\r\nconst renderer = new marked.Renderer();\r\nrenderer.link = function (href, title, text) {\r\n    return `<a target=\"_blank\" href=\"${href}\" title=\"${title}\" >${text}</a>`;\r\n};\r\nrenderer.code = function (code) {\r\n    return `<pre style=\"background: #e4e4e4;padding: 10px; font-size: 80%; border-radius: 5px; margin: 8px 0\">${code}</pre>`;\r\n};\r\nrenderer.image = function (href, title, text) {\r\n    return `<img src=\"${href}\" title=\"${title}\" width=\"200\"></img>`;\r\n};\r\n\r\nconst Main = (props) => {\r\n    const editorMaximized = props.editor;\r\n    const previewMaximized = props.preview;\r\n    let editor, preview;\r\n    if (editorMaximized) {\r\n        editor = {\r\n            flex: 1,\r\n        };\r\n        preview = {\r\n            flex: 0,\r\n            padding: 0,\r\n            opacity: 0,\r\n            width: 0,\r\n        };\r\n    }\r\n    if (previewMaximized) {\r\n        editor = {\r\n            flex: 0,\r\n            padding: 0,\r\n            opacity: 0,\r\n            width: 0,\r\n        };\r\n\r\n        preview = {\r\n            flex: 1,\r\n        };\r\n    }\r\n\r\n    const cleanHTML = {\r\n        // __html: DOMPurify.sanitize(marked(props.markdown, { renderer: renderer })),\r\n        __html: marked(props.markdown, { renderer: renderer }),\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main-container\">\r\n                <div className=\"editor main-child\" style={editor}>\r\n                    <div className=\"toolbar\"></div>\r\n                    <textarea\r\n                        id=\"editor\"\r\n                        style={editor}\r\n                        onChange={props.onChange}\r\n                        value={props.markdown}\r\n                    ></textarea>\r\n                </div>\r\n                <div className=\"preview main-child\" style={preview}>\r\n                    <div id=\"preview\" dangerouslySetInnerHTML={cleanHTML}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import \"../styles/Nav.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExpandArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCompressArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = (props) => {\r\n    const editor = props.editor ? faCompressArrowsAlt : faExpandArrowsAlt;\r\n    const editorClick = props.editorClick;\r\n    const preview = props.preview ? faCompressArrowsAlt : faExpandArrowsAlt;\r\n    const previewClick = props.previewClick;\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"nav-container\">\r\n                <span className=\"logo\">Markdown Previewer</span>\r\n                <div className=\"buttons\">\r\n                    <button className=\"button\" onClick={editorClick}>\r\n                        Editor\r\n                        <FontAwesomeIcon icon={editor} className=\"button-icon\" />\r\n                    </button>\r\n                    <button className=\"button\" onClick={previewClick}>\r\n                        Previewer\r\n                        <FontAwesomeIcon icon={preview} className=\"button-icon\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport Nav from \"./components/Nav\";\n\nconst placeholder = `\n# Welcome to .md Previewer!\n## Type whatever you want!\n\nA link to my [Github!](https://www.github.com/kyle4real)\n\nInline code: \\`<div>hello, world!</div>\\`\n\\`\\`\\`\n// multi-line code\n\nfunction example() {\n  return 'hello!';\n}\n\\`\\`\\`\n- heres a list item!\n  - and another!\n    - and another!\n\n> this is a blockquote\n**bold text** _italic text_ **_both_**\n~~pretty cool~~... very cool!\n![MD Logo](https://cdn0.iconfinder.com/data/icons/octicons/1024/markdown-512.png)\n`;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            markdown: placeholder,\n            editorMaximized: false,\n            previewMaximized: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleEditorMaximized = this.handleEditorMaximized.bind(this);\n        this.handlePreviewMaximized = this.handlePreviewMaximized.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            markdown: e.target.value,\n        });\n    }\n\n    handleEditorMaximized() {\n        this.setState({\n            editorMaximized: !this.state.editorMaximized,\n            previewMaximized: this.state.previewMaximized ? false : this.state.previewMaximized,\n        });\n    }\n\n    handlePreviewMaximized() {\n        this.setState({\n            editorMaximized: this.state.editorMaximized ? false : this.state.editorMaximized,\n            previewMaximized: !this.state.previewMaximized,\n        });\n    }\n\n    render() {\n        const { editorMaximized, previewMaximized, markdown } = this.state;\n        return (\n            <>\n                <Nav\n                    editor={editorMaximized}\n                    preview={previewMaximized}\n                    editorClick={this.handleEditorMaximized}\n                    previewClick={this.handlePreviewMaximized}\n                />\n                <Main\n                    editor={editorMaximized}\n                    preview={previewMaximized}\n                    onChange={this.handleChange}\n                    markdown={markdown}\n                />\n            </>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}